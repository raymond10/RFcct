/*******************************************************************************
 * Copyright (c) Raymond NANEON  - 2013.
 * Universite de Technologie de Troyes - CEDRE (www.utt.fr), since 1993.
 * This software is governed by the CeCILL license under French law and abiding by the
 * rules of distribution of free software. You can use, modify and/or 
 * redistribute the software under the terms of the CeCILL license as 
 * circulated by CEA, CNRS and INRIA at the following URL 
 * "http://www.cecill.info". 
 * As a counterpart to the access to the source code and rights to copy, modify 
 * and redistribute granted by the license, users are provided only with a 
 * limited warranty and the software's author, the holder of the economic 
 * rights, and the successive licensors have only limited liability. In this 
 * respect, the user's attention is drawn to the risks associated with loading,
 * using, modifying and/or developing or reproducing the software by the user 
 * in light of its specific status of free software, that may mean that it
 * is complicated to manipulate, and that also therefore means that it is 
 * reserved for developers and experienced professionals having in-depth
 * computer knowledge. Users are therefore encouraged to load and test the 
 * software's suitability as regards their requirements in conditions enabling
 * the security of their systems and/or data to be ensured and, more generally, 
 * to use and operate it in the same conditions as regards security. The
 * fact that you are presently reading this means that you have had knowledge 
 * of the CeCILL license and that you accept its terms.
 * 
 * Do not remove this copyright message
 * 
 * Contributors:
 *     Raymond NANEON - initial API and implementation
 ******************************************************************************/
package org.utt.rfcct.serveur.components;

import org.utt.fwkuttcompetences.serveur.modele.rfcct.EOCompetence;

import com.webobjects.appserver.WOActionResults;
import com.webobjects.appserver.WOContext;
import com.webobjects.eocontrol.EOEditingContext;

public class EnregistrementModuleBar extends BaseComponent {
    /**
	 * 
	 */
	private static final long serialVersionUID = 5199384394664015413L;
    private static final String BINDING_COMPETENCE = "competence";
    private static final String BINDING_ENREGISTRER = "enregistrer";
    private static final String BINDING_ANNULER = "annuler";
    private static final String BINDING_CONSULTER = "consulter";
    private static final String BINDING_ACCUEIL = "accueil";
    private static final String BINDING_ENABLED = "enabled";
    private boolean enabled = true;

	public EnregistrementModuleBar(WOContext context) {
        super(context);
    }

    @Override
    public boolean synchronizesVariablesWithBindings() {
        return false;
    }
    
    public EOCompetence competence() {
    	return (EOCompetence) valueForBinding(BINDING_COMPETENCE);
    }
    
    private EOEditingContext editingContext() {
    	return competence().editingContext();
    }
	
    /**
	 * @return the enabled
	 */
	public boolean enabled() {
		if (hasBinding(BINDING_ENABLED)){
    		return (Boolean) valueForBinding(BINDING_ENABLED);
    	} else {
    		return enabled;
    	}
	}

	/**
	 * @param enabled the enabled to set
	 */
	public void setEnabled(boolean enabled) {
		if (hasBinding(BINDING_ENABLED)){
			setValueForBinding(enabled, BINDING_ENABLED);
		} else {
			this.enabled = enabled;
		}
	}

	public WOActionResults annuler() {
        if(hasBinding(BINDING_ANNULER)) {
          return (WOActionResults) valueForBinding(BINDING_ANNULER);
        } else {
          editingContext().revert();
          mySession().addSimpleInfoMessage("RFCCT", "Les changements ont bien été annulés");
          return null;
        }
      }
      
      public WOActionResults enregistrer() {
          return (WOActionResults) valueForBinding(BINDING_ENREGISTRER);
      }
      
      public WOActionResults accueil() {
          return (WOActionResults)valueForBinding(BINDING_ACCUEIL);
      }
      
      public WOActionResults consulter() {
          return (WOActionResults) valueForBinding(BINDING_CONSULTER);
      }
}
